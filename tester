#!/usr/bin/env bash
# vim: ft=sh
set -x

# . ./humblepie.rc
key="$1"
hib_bundle=55
file="${USER}-${hib_bundle}-md5.txt" 
dump="list.txt"
links -html-numbered-links 1 \
  -dump https://www.humblebundle.com/downloads\?key\="${key}">$dump
sumre="^[0-9a-fA-F]{32}"
while read -r sums; do
  [[ "${sums##*#}" =~ $sumre ]] && sumslist+=("${sums##*#}")
done <$dump
rm -f $file
(IFS="
"; printf '%s\n' "${sumslist[@]}" >>$file)
# for "${sumslist[@]}"; do
#   printf '%s\n' 

# for ((i=0;i<="${#sumslist[@]}";i++)); do
#   printf '%s\n' "${sumslist[$i]}" >>$file
# done
# sumslist="${sumslist[@]/stats/}"
# sumslist="${sumslist[@]##stats}"
# echo "${sumslist[@]}" && false
# printf '%s\n' "${sumslist[@]}"
# rm -f $file
# for ((i=1;i<="${#sumslist[@]}";i++)); do
#   # [[ "${sumslist[$i-1]}" =~ [[:alnum:]] ]] &&
#     printf '%s\n' "${sumslist[$i-1]}" >>$file
# done
# while read -r line; do
#   i=0
#   # echo "${sums[$i]}" "$line"
#   [[ "${sums[$i]}" == $line ]]

#   (( i++ ))
# done <zendeavor--md5.txt
# done <"$sumsfile"
# echo "${sums[@]}"
# declare -a list
#  while read -r line; do
#   list+=("$line")
# done <list.txt
# derp="${#list[@]}"
# for num in {1..10}; do
#   echo $num
# done
# foobar="meh nuuu     "
# printf "${foobar//$/}"
## generate a numbered list
# for (( i=0; i<="${#list[@]}"; i++ )); do
#   # (( i-- ))
#   printf "%s.\t%s\n" "$i" "${list[$((i-1))]}"
# done
# f='printf "%s.\t%s\n" "$i" "${list[$i-1]}" 1>&66'
# for ((i=1;++i<="$(($((`eval "$f"`)), ${#list[@]}))";));do :;done 66>&1
# echo "${#list[@]}"
# print_array_with_index() {
#   local arr="$1"
#   for $arr; do
#     printf "%s.\t%s" "$"
# }
# echo "${list[@]}"
# echo $count
# echo $list

# while read -r line; do
# done <list.txt
# echo "$count"
# for lines; do
#   count+="$lines"
# done <list.txt
# arch="foo"
# architectures=('bar' 'baz' 'quux' 'foo')
# # for (( i=0;i<"${#architectures[@]}";i++ )); do
# for a in "${architectures[@]}"; do
#   [[ "$a" == "$arch" ]] && break
#   echo no
# done
# a="/foo/bar"
# b="a"
# c="${!a@}"
# d="${!b}"
# e="${!c}"

# echo "a:$a b:$b c:$c d:$d e:$e"
# declare -A bundlekeys
# for var in "${!hibkey_@}"; do
#   if [[ -n "$var" ]]; then 
#     # echo "$var"
#     # echo "${!var}"
#     bundlekeys+=( ["$var"]="${!var}" ) 
#     # verbose "INFO" "Key for $var found."
#   else :
#     # broken "No keys discovered."
#     # verbose "ERROR" "No keys configured.\n" \
#     #   "Please specify a key with -k [key] or in your user's config file."
#   fi
# done
# echo "foo bar baz ${!bundlekeys[@]} quux"
# echo "foo bar ${bundlekeys[@]} quux"

# (( EUID ))
# echo $?
# (( ! EUID ))
# echo $?
# a="fob:yx:"
# b="foo,bar:,baz,quux:"
# for i in "${a//,/ }"; do
#   if [[ "${1:2}" = "${i//:}" ]]; then
#     echo $i
#   fi
# done
# for i in "${b//,/ }"; do
#   if [[ "${1:2}" = "${i//:}" ]]; then
#     echo $i
#   fi
# done

