#!/usr/bin/env bash
###############################################################################
### thanks to:
### JavaAtom <faustian.merula@gmail.com>: filename generation for Introversion
###
###
###############################################################################
## covered bundles:
##  4, 5, frozensynapse, introversion(maybe?)
OPTIND=1
rcfile="${XDG_CONFIG_HOME}/humblepie.rc"
[[ -f "${rcfile}" ]] && . "${rcfile}"


## options
# -a [architecture]: 32, 64
# -b [bundle]: which bundle to use
# -c: check_sum the game, optional
# -d [path]: directory where game should exist
# -g [game]: which game to perform work on
# -h: print usage
# -i [dir]: install game into specified directory
# -k [key]: set hib_ key
# -t [path]: directory where torrent files should exist
# -v: verbosity
# need something for specifying system to determine which download to grab
# allow systemwide installs as root

while getopts "vha:b:cd:g:i:k:t:" opt; do
  case "$opt" in
    a) ## check_arch will make sure i get a value i can work with
      hib_arch="${OPTARG}"
      ;;
    b) ## check_key should successfully verify that keys match
      hib_bundle="hib_${OPTARG}_key"
      ;;
    c) check_sum="y"
    d) ## set the download/game dir
      hib_dir="${OPTARG}"
      ;;
    g) ## this should just store the game name
      ## for now, i plan to have another function that kicks off the rest
      hib_game="${OPTARG}"
      ;;
    h) ## print usage
      ;;
    i) install_dir="${OPTARG}"
      ;;
    k) ## specify a key manually
      ;;
    t) ## set the .torrent dir
      use_torrents=y
      hib_torrent_dir="${OPTARG}"
      ;;
    v) verbose="y"
      ;;
    x) automagic="y"
      ;;
  esac
done

check_key() {
  local k
  k="hib_bundle"
  for v in "${!bundlekeys[@]}"; do
    if [[ "${v}" == "${!k}" ]]; then
      hib_key="${v}"
      # check_bundle
    else
      error "${!k} was not found!"
    fi
  done
}

check_arch() {
  if [[ -n "${hib_arch}" ]]; then
    [[ "${hib_arch}" =~ "i.86" || "${hib_arch}" == "x86_64" ]] || {
        verbose "WARNING" "Invalid value for hib_arch.\n" \
          "\tValid values are i386, i686, x86_64"
      [[ "${automagic}" == "y" ]] && {
        verbose "INFO" "Using $(uname -m) instead..."
        hib_arch="$(uname -m)"
      }
    }
  else 
      verbose "WARNING" "hib_arch has not been specified.\n" \
        "Please set hib_arch in ${rcfile} " \
        "or specify it with -a [i386, i686, x86_64]"
    [[ "${automagic}" == "y" ]] && {
      verbose "INFO" "Using $(uname -m) instead..."
      hib_arch="$(uname -m)"
    }
  fi
}

check_dir() {
  local directory
  directory="$1"
  if [[ -d "${directory}" ]]; then
    [[ -w "${directory}" ]] || {
      verbose "WARNING" "${directory} does not exist or is not writable!"
      [[ "${automagic}" == "y" ]] && {
        verbose "INFO""Using ${directory} instead..."
        directory="${directory}/humbleindiebundle"
        mkdir -p "${directory}"
      }
    }
  else
    verbose "WARNING" "No download directory specified.\n" \
      "\tUsing current directory instead..."
    directory="$PWD"
  fi
}

# warning() {
#   local mesg="$1"; shift
#   printf "==> $(gettext "WARNING:") ${mesg}\n" "$@" >&2
# }

# error() {
#   local mesg="$1"; shift
#   printf "==> $(gettext "ERROR:") ${mesg}\n" "$@" >&2
#   exit 1
# }

broken() {
  [[ "${verbose}" != "y" ]]
  echo "Something's wrong..."
  echo "Try again with -v or set verbose=y in ${rcfile}"
  exit 1
}

verbose() {
  [[ "${verbose}" == "y" ]] && {
    local info="$1" mesg="$2"; shift 2
    printf "==> $(gettext ${info}:) ${mesg}\n" "$@" >&2
  }
}

_main() {
  check_arch
  check_key "${hib_bundle}"
  check_dir "${hib_dir}"
  [[ "${use_torrents}" == "y"  ]] && {
    check_dir "${hib_torrent_dir}"
  }
}

# check_bundle() {
#   case "${hib_key}" in
#     ## set my important values to variables and kick to the downloader
#     hib_1key) hib_1;;
#     hib_2key) hib_2;;
#     hib_3key) hib_3;;
#     hib_4key) hib_4;;
#     hib_5key) hib_5;;
#     hib_android1key) hib_android1;;
#     hib_android2key) hib_android2;;
#     hib_botaniculakey) hib_botanicula;;
#     hib_frozenbytekey) hib_frozenbyte;;
#     hib_frozensynapsekey) hib_frozensynapse;;
#     hib_introversionkey) hib_introversion;;
#     hib_mojamkey) hib_mojam;;
#     hib_voxatronkey) hib_voxatron;;
#   esac
# }

# vim: ft=sh sw=2 sts=2 et
