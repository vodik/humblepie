#!/usr/bin/env bash
## test functions i probably don't want
gamever() {
  for _key in "${!hibgames[@]}"; do
    case "${_key}" in
      ## all of these games have shit naming conventions
      andyetitmoves)
        ## andyetitmoves-1.2.2-1_x86_64.tar.gz
        _ver="1.2.2-1"
        _arch="x86_64"
        _type="tar.gz"
        break
        ;;
      bittriprunner) ## pfft
        ## bit.trip.runner_amd64.tar.gz
        break
        ;;
      braid) 
        ## braid_1.0.0-0ubuntu2_amd64.deb
        ver="1.0.0-0"
        break
        ;;
      cavestoryplus)
        ## cavestoryplus-linux-1324519044.tar.gz
        ver="1324519044"
        platform="linux"
        break
        ;;
      claw)
        ## clawBeta3.zip
        ver="Beta3"
        break
        ;;
      cogs) 
        ## cogs_20110811_all.tar.gz
        ver="20110811"
        break
        ;;
      crayonphysicsdelux)
        ## crayon-physics-deluxe_55_i386.tar.gz
        ver="55"
        break
        ;;
      gratuitousspacebattles)
        ## gsb1324679796.tar.gz
        ver="1324679796"
        break
        ;;
      hammerfight)
        ## hammerfight_1.004_all.tar.gz
        ver="1.004"
        break
        ;;
      jamestown)
        ## jtownlinux_1_0_1_1324610248.zip
        ver="1_0_1_1324610248"
        break
        ;;
      lonesurvivor)
        ## lonesurvivor-1.11d-amd64.tar.gz
        ver="1.11d"
        break
        ;;
      nightskyhd)
        ## nightskyhd-linux-1324519044.tar.gz
        ver="1324519044"
        platform="linux"
        break
        ;;                   
      psychonauts)
        ## psychonuts-linux-test-06032012.tar.bz2
        ver="06032012"
        platform="linux"
        break
        ;;
      shadowgrounds)
        ## shadowgroundsUpdate1.run
        ver="Update1"
        break
        ;;
      shank)
        ## shank-linux-120720110-1-bin
        ver="120720110-1"
        break
        ;;
      supermeatboy)
        ## supermeatboy-linux-06072012-bin
        ver="06072012"
        platform="linux"
        break
        ;;
      survivor)
        ## survivorUpdate1.run
        ver="Update1"
        break
        ;;
      VVVVVV)
        ## VVVVVV_2.01_Linux.tar.gz
        ver="2.01"
        platform="Linux"
        break
        ;;
      *) echo "Sorry, ${_key} is not yet supported." ;;
    esac
  done
}
[[ -f "${hibdir}/${hibgame}" ]] && {
  ln -sf "${hibdir}/${hibgame}" .
}

_checkgame() {
  [[ -f "${hibgame}" ]] || {
    local prompt="Absolute path (omit trailing slashes): "
    [[ -d "${hibdir}" ]] && {
    echo "Specify the path to the directory containing ${hibgame}"
    echo -n "${prompt}"
    while read -er _dir; do
      while [[ -f "${_dir}/${hibgame}" ]]; do
        [[ $(md5sum "${_dir}/${hibgame}") == ${md5sum[0]} ]] {
          ln -sf "${_dir}/${hibgame}" .
          export hibdir="${_dir}"
      }
      done
    done
    }

    echo "Y to specify path to existing download, blank to specify your humble indie bundle key."
    echo "Alternatively, place the download into ${hibdir} and retry."
    read -r cont

    case "${cont}" in
      [yY]) _dlgame
        ;;
      *) echo "Specify your humble indie bundle key."
        echo -n "Humble Indie Bundle key: "
        read -r _hib
        [[ -n "${_hib}" ]] && hibkey="_hib"
        ;;
    esac
  }
}

OPTIND=1
while getopts "a:b:d:g:i:k:o:r:t:u:U:v:chIV" opt; do
  case "$opt" in
    a) ## check_arch will make sure i get a value i can work with
      hib_arch="${OPTARG}"
      ;;
    b) ## check_key should successfully verify that keys match
      hib_bundle="hib_${OPTARG}_key"
      ;;
    c) ## check_game should verify md5, not implemented
      check_sum="y"
      [[ -n "${OPTARG}" ]] && {
        sanitize_name "${OPTARG}"
        check_sum "${hib_game}"
        exit 0
      }
      ;;
    d) ## set the download/game dir
      hib_dir="${OPTARG}"
      ;;
    g) ## this should just store the game name
      # for now, i plan to have another function that kicks off the rest
      hib_game="${OPTARG}"
      ;;
    h\?) : ## print usage
      ;;
    i) ## not implemented
      # install_dir="${OPTARG}"
      ;;
    I) : ## not implemented, maybe never will but seems simplish
      # interactive="y"
      ;;
    k) ## specify a key manually, not implemented
      hib_key="${OPTARG}"
      ;;
    m) ## set download method
      case "${OPTARG}" in
        t|torrent) dl_method="torrent"
          ;;
        h|http) dl_method="http"
          ;;
      esac
      ;;
    o) ## set options for download; these MUST be quoted
      dl_opts="${OPTARG}"
      ;;
    r|R|u|U) : ## uninstall the game; essentially, just rm -rf the install dir
      # which means i need some way to FIND the install dir if not in rcfile
      ;;
    t) ## set the hib_torrent_dir
      hib_torrent_dir="${OPTARG}"
      ;;
    U) ## check for updates and download if possible
      # if [[ "${OPTARG}" ]]; then
      #   hib_game="${OPTARG}"
      #   automagic="y"
      #   updater
      # else
      #   updater "$0"
      # fi
      ;;
    v) ## enable verbosity
      [[ "${OPTARG}" != "no" ]] &&
        verbose="y"
      ;;
    V) : ## print version info
      ;;
    x) 
      [[ "${OPTARG}" != "no" ]] &&
        automagic="y"
      ;;
  esac
done
# vim: ft=sh
